--EXEC sp_addlinkedserver
--    @server = 'HallMarkingOct162023',
--    @srvproduct = 'Excel',
--    @provider = 'Microsoft.ACE.OLEDB.12.0',
--    @datasrc = 'C:\Users\Anuj Kapil\OneDrive - Ontario\Desktop\Hallmarking Process\HallMarking Oct 16 2023\HallMarkingExport\HallMarking.xlsx',
--    @provstr = 'Excel 12.0;IMEX=1;HDR=YES;'
	


	drop table if exists #hallmarkingunion 



SELECT * INTO #hallmarkingunion from OPENQUERY(HallMarkingOct162023,'select * from [RETAIL-21JUN2024$]')  

 


	drop table if exists #result 
	select *  into #result from 
	(
	select  REFERENCE, [inputs/quantity],	[inputs/product/name],	[inputs/product/cost_price],	[inputs/product/country_of_origin/name],	
	case when [product/hs_code] LIKE '%.19%' THEN '7113.19.5090' 
         else [product/hs_code] end as [product/hs_code]

	,	
	[product/code],	[inputs/product/weight],ROUND([inputs/quantity]*[inputs/product/cost_price],2) as total, CASE  When ([inputs/product/name] LIKE '%Earring%' 
				   or [inputs/product/name] LIKE '%hoops%'
				   or [inputs/product/name] LIKE '%Huggies%'
				   or [inputs/product/name] LIKE '%studs%')
				   THEN [inputs/quantity] *2
				   ELSE [inputs/quantity] END AS [Assay Office Quantity],
	
	
			CASE   When ([inputs/product/name] LIKE '%Necklace%' or [inputs/product/name] LIKE '%Choker%') and substring([product/hs_code],6,2) ='19' then 'N' 
	               When ([inputs/product/name] LIKE '%Necklace%' or [inputs/product/name] LIKE '%Choker%') and substring([product/hs_code],6,2) ='11' then 'SN'
				   When ([inputs/product/name] LIKE '%Ring%' and [inputs/product/name] not like '%earring%') and substring([product/hs_code],6,2) ='19' then 'R' 
				   When ([inputs/product/name] LIKE '%Band%' and [inputs/product/name] not like '%earring%') and substring([product/hs_code],6,2) ='19' then 'R'
	               When ([inputs/product/name] LIKE '%Ring%' and [inputs/product/name] not like '%earring%') and substring([product/hs_code],6,2) ='11' then 'SR'
				     When ([inputs/product/name] LIKE '%Band%' and [inputs/product/name] not like '%earring%') and substring([product/hs_code],6,2) ='11' then 'SR'
				   When ([inputs/product/name] LIKE '%Earring%' 
				   or [inputs/product/name] LIKE '%hoop%'
				   or [inputs/product/name] LIKE '%Huggies%'
				   or [inputs/product/name] LIKE '%studs%')
				   and substring([product/hs_code],6,2) ='19' then 'E' 
	               When ([inputs/product/name] LIKE '%Earring%' 
				   or [inputs/product/name] LIKE '%hoop%'
				   or [inputs/product/name] LIKE '%Huggies%'
				   or [inputs/product/name] LIKE '%studs%') 
				   and substring([product/hs_code],6,2) ='11' then 'SE'
				   When ([inputs/product/name] LIKE '%Bracelet%' OR [inputs/product/name] LIKE '%anklet%' or [inputs/product/name] LIKE '%bangle%' or [inputs/product/name] LIKE '%cuff%') and substring([product/hs_code],6,2) ='19' then 'B' 
	               WHen ([inputs/product/name] LIKE '%Bracelet%' OR [inputs/product/name] LIKE '%anklet%'or  [inputs/product/name] LIKE '%bangle%' OR [inputs/product/name] LIKE '%cuff%') and substring([product/hs_code],6,2) ='11' then 'SB'
				   When [inputs/product/name] LIKE '%Charm%' and substring([product/hs_code],6,2) ='19' then 'Charm' 
	               When [inputs/product/name] LIKE '%Charm%' and substring([product/hs_code],6,2) ='11' then 'S Charm'
				   else 'unknown' end as tag 
				  
			   from #hallmarkingunion
   ) a
 
		select * from #result

	DROP TABLE IF EXISTS #pivot1
				   
		SELECT  [inputs/product/country_of_origin/name],[product/hs_code], 
		round(sum(TOTAL),2) as [Sum of Total],
		round(sum([inputs/quantity]),2) as [Sum of inputs/quantity]
		into #pivot1 
        from #result 
		GROUP BY 
		grouping sets 
		(([product/hs_code],[inputs/product/country_of_origin/name]), ([inputs/product/country_of_origin/name]),() )
		order by 1,3



	select /*[inputs/product/country_of_origin/name],*/
	REFERENCE, tag,round(sum(TOTAL),2) as [Sum of Total],
	round(sum([Assay Office Quantity]),2) as [Sum of Assay Office Quantity]
	from #result
	group by 
	grouping sets 
	((reference,/*[inputs/product/country_of_origin/name]*/TAG), ())
	order by 1, 2


	select [inputs/product/country_of_origin/name],
	REFERENCE, tag,round(sum(TOTAL),2) as [Sum of Total],
	round(sum([Assay Office Quantity]),2) as [Sum of Assay Office Quantity]
	from #result
	group by 
	grouping sets 
	((reference,[inputs/product/country_of_origin/name],TAG), ())
	order by 2,3,1
	
	


	declare @totalsum int 
	SELECT @totalsum = [sum of inputs/quantity] 
	FROM #pivot1 
	where [inputs/product/country_of_origin/name] is null and [product/hs_code] is null 

	drop table if exists #dhlweights 
	SELECT *,iif(substring([product/hs_code],6,2)='19','Gold','Silver') as metalTYPE , round(weight/[sum of inputs/quantity],5) as weightperunit into #dhlweights from 
	(
	select *, ROUND(([Sum of inputs/quantity]/@totalsum)*2,2)  AS WEIGHT ,
	ROUND([SUM OF TOTAL]/[SUM OF INPUTS/QUANTITY],2) AS UNITVALUE from #pivot1 p
	)A
	where [product/hs_code] is not null and [inputs/product/country_of_origin/name] is not null
ORDER BY 1 DESC, 2 DESC 


SELECT * FROM #dhlweights 

--select 1 as uniqueitem, 'INV_ITEM' AS INV_ITEM,
--IIF(patindex('%19%',[product/hs_code])>0,'14K Gold Fine Jewelry - necklace / bracelet- other link type','Silver Jewelry - necklace / bracelet - other link type') AS itemdescription ,
--[product/hs_code],
--[Sum of inputs/quantity],
--'PCS' AS ITEMTYPE,
--UNITVALUE,
--'USD' AS currencyvalue,
--round(weightperunit,3) as weightperunit , 
--'' as weight2,
--countrycode,
--'' as reftype,
--'' as refdetails,
--'' as taxpaid

--from #dhlweights dhl
--inner join reports.dbo.hallmarkingcountry hm
--on dhl.[inputs/product/country_of_origin/name] = hm.country


--select distinct [inputs/product/country_of_origin/name]
--from #dhlweights



--7113.19.5090

--CREATE TABLE reports.dbo.hallmarkingcountry
--(
--country varchar(100), 
--countrycode varchar(100)
--)

--insert into reports.dbo.hallmarkingcountry
--VALUES('Turkey', 'TR')



--select * from hallmarkingcountry

--select * from #dhlweights
	



	SELECT *, round(weight/[sum of inputs/quantity],5) from 
	(
	select *, ROUND(([Sum of inputs/quantity]/@totalsum)*2,2)  AS WEIGHT 
 from #pivot1 p
	)A
	where [product/hs_code] is not null and [inputs/product/country_of_origin/name] is not null
ORDER BY 1 , 2  

drop table if exists COUNTRYCODES 
SELECT * INTO COUNTRYCODES from OPENQUERY(HallMarkingOct162023,'select * from [CountryCodes$]')  


--DROP TABLE IF EXISTS BULKLOADS 
--SELECT * INTO BULKLOADS from OPENQUERY(HallMarkingOct162023,'select * from [BULKLOAD$]')  

--drop table if exists bulkuploadrows
--select 'D'+Ctrycode as detailheader,
--'ON' as coo,left(REPLACE([product/hs_code],'.',''),6)+'00' as hscode, 
--IIF([product/hs_code] LIKE '%19%' ,
--convert(text,'14K Fine Gold Jewelry - necklace/bracelet - other link type                                                                                                                                                                                              '),
--convert(text,'Silver Jewelry - necklace/bracelet - other link type  
--')) AS desval
--,[Sum of inputs/quantity] AS QUANTITY 
--,'NMB' as measure
--,ROUND([Sum of Total],0) as VALUE 
--into bulkuploadrows
--from #dhlweights dhl 

--inner join COUNTRYCODES  on dhl.[inputs/product/country_of_origin/name] = COUNTRYCODES.Country





select * from bulkloads 


SELECT * FROM #dhlweights




drop table if exists detailreport
SELECT * INTO detailreport from OPENQUERY(HallMarkingOct162023,'select * from [DETAILREPORT$]')




--select datalength(detailheader), detailheader from bulkuploadrows

--SELECT * FROM bulkuploadrows



--drop table if exists testbulkuploadfinal
--create table testbulkuploadfinal
--(
--d char(23), 
--c char(5),
--hscode int,
--desval char(346),
--quantity INT , 
--measure char(53),
--value int
--)

--insert into testbulkuploadfinal
--select * from bulkuploadrows 




--SELECT concat(d,'',c,'                           ',convert(varchar,hscode),
--'                      ',desval,
--'',
--convert(char,quantity),'           ',MEASURE,'',[value])
--FROM testbulkuploadfinal




DROP TABLE IF EXISTS BULKLOADS 
SELECT * INTO BULKLOADS from OPENQUERY(HallMarkingOct162023,'select * from [BULKLOAD$]')  

drop table if exists bulkuploadrows
select 'D'+Ctrycode as detailheader,
'ON' as coo,left(REPLACE([product/hs_code],'.',''),6)+'00' as hscode, 
IIF([product/hs_code] LIKE '%19%' ,
convert(text,'14K Fine Gold Jewelry - necklace/bracelet - other link type'),
convert(text,'Silver Jewelry - necklace/bracelet - other link type')) AS desval
,CONVERT(VARCHAR,[Sum of inputs/quantity]) AS QUANTITY 
,'NMB' as measure
,CONVERT(VARCHAR,ROUND([Sum of Total],0)) as VALUE 
into bulkuploadrows
from #dhlweights dhl 

inner join COUNTRYCODES  on dhl.[inputs/product/country_of_origin/name] = COUNTRYCODES.Country

select * from bulkuploadrows

--SELECT concat(detailheader,'                    ',coo,'                              ',convert(varchar,hscode),
--'                      ',desval,
--'                                                                                                                                                                                                                                                                                        ',
--convert(char,quantity),'        ',MEASURE,'                                                  ',[value])
--FROM bulkuploadrows


SELECT concat(detailheader,space(20),coo,space(30),convert(varchar,hscode),space(22),
desval,space(284),
quantity,space(8),MEASURE,SPACE(50),[value])
FROM bulkuploadrows
where desval like '%silver%'
AND LEN(QUANTITY)=2
union
SELECT concat(detailheader,space(20),coo,space(30),convert(varchar,hscode),space(22),
desval,space(284),
quantity,space(7),MEASURE,SPACE(50),[value])
FROM bulkuploadrows
where desval like '%silver%'
AND LEN(QUANTITY)=3
UNION
SELECT concat(detailheader,space(20),coo,space(30),convert(varchar,hscode),space(22),
desval,space(285),
quantity,space(8),MEASURE,SPACE(50),[value])
FROM bulkuploadrows
where desval like '%silver%'
AND LEN(QUANTITY)=1
UNION
SELECT concat(detailheader,space(20),coo,space(30),convert(varchar,hscode),space(22),
desval,space(277),
quantity,space(8),MEASURE,SPACE(50),[value])
FROM bulkuploadrows
where desval like '%gold%'
AND LEN(QUANTITY)=2
union
SELECT concat(detailheader,space(20),coo,space(30),convert(varchar,hscode),space(22),
desval,space(277),
quantity,space(7),MEASURE,SPACE(50),[value])
FROM bulkuploadrows
where desval like '%gold%'
AND LEN(QUANTITY)=3
union
SELECT concat(detailheader,space(20),coo,space(30),convert(varchar,hscode),space(22),
desval,space(278),
quantity,space(8),MEASURE,SPACE(50),[value])
FROM bulkuploadrows
where desval like '%gold%'
AND LEN(QUANTITY)=1

--select 'DDE                    ON                              71131100	                     Silver Jewelry - necklace/bracelet - other link type                                                                                                                                                                                                                                                                                            36        NMB                                                  1465'
--union
--select 'DHK                    ON                              71131900	                     14K Fine Gold Jewelry - necklace/bracelet - other link type                                                                                                                                                                                                                                                                                      8	       NMB                                                  25717'


drop table if exists #kingsgoldsilver
	 select distinct [inputs/product/country_of_origin/name]  into #kingsgoldsilver
	 from #result 
	 WHERE  REFERENCE LIKE '%KING%' 
	

	 declare @refKings varchar(1000)
select @refKings = reference from #result 
WHERE  REFERENCE LIKE '%KING%' 

	  
	 	declare @goldKING varchar(100)
	 SELECT  @goldKING =
COALESCE(@goldKING+ ' ','') +  [inputs/product/country_of_origin/name]
from #kingsgoldsilver 
 
select getdate(),
'MEJ001',
 'MEJ001',
 'MEJ002',
 'MEJ005',
 @refKings,
 'Imported',
 @goldKING,
 'New',
 'Yes',
 'CCM',
'CS3',
 'Edinburgh',
 @refKings,
 0 

drop table if exists #Coventgoldsilver
	 select distinct [inputs/product/country_of_origin/name]  into #Coventgoldsilver
	 from #result 
	 WHERE  REFERENCE LIKE '%COVENT%' 
	

	 declare @refCovent varchar(1000)
select @refCovent = reference from #result 
WHERE  REFERENCE LIKE '%COVENT%' 

 
	  
	 	declare @goldCOVENT varchar(100)

	 SELECT  @goldCOVENT =
COALESCE(@goldCOVENT+ ' ','') +  [inputs/product/country_of_origin/name]
from #Coventgoldsilver 
select getdate(),
'MEJ001',
 'MEJ001',
 'MEJ002',
 'MEJ004',
 @refcOVENT,
 'Imported',
 @goldCOVENT,
 'New',
 'Yes',
 'CCM',
'CS3',
 'Edinburgh',
 @refCovent,
 0 

 drop table if exists #Marylebonegoldsilver
	 select distinct [inputs/product/country_of_origin/name]  into #Marylebonegoldsilver
	 from #result 
	 WHERE  REFERENCE LIKE '%MARY%' 
	

	 declare @refmyb varchar(1000)
select @refmyb = reference from #result 
WHERE  REFERENCE LIKE '%MARY%' 

	 	declare @goldMYB varchar(100)

	 SELECT  @goldMYB =
COALESCE(@goldMYB+ ' ','') +  [inputs/product/country_of_origin/name]
from #Marylebonegoldsilver 
select getdate(),
'MEJ001',
 'MEJ001',
 'MEJ002',
 'MEJ003',
 @refmyb,
 'Imported',
 @goldMYB,
 'New',
 'Yes',
 'CCM',
'CS3',
 'Edinburgh',
 @refmyb,
 0 

 
 DROP TABLE IF EXISTS #EDINBURGHSUM 
 	drop table if exists #edinburghsum 
	select /*[inputs/product/country_of_origin/name],*/
	[product/hs_code],REFERENCE, tag,round(sum(TOTAL),2) as [Sum of Total],
	round(sum([Assay Office Quantity]),2) as [Sum of Assay Office Quantity]
	into #edinburghsum
	from #result
	group by 
	grouping sets 
	(([product/hs_code],reference,/*[inputs/product/country_of_origin/name]*/TAG), ())
	order by 1, 2





	select reference,row_number() over (order by tag) as pid,iif([product/hs_code] ='7113.11.5000','Silver925','Gold585'),'',[sum of assay office quantity] ,
	case 
	when tag='B' Then 'bracelets'
	when tag='Charm' then 'charms'
	when tag='R' then 'rings'
	when tag='E' then 'earrings'
	when tag='N' then 'necklaces'
	when tag='SB' Then 'bracelets'
	when tag='SCharm' then 'charms'
	when tag='SR' then 'rings'
	when tag='SE' then 'earrings' 
		when tag='SN' then 'necklaces'
	else 'CHECK'
	end as val , case 
	when tag='B' Then 'bracelets'
	when tag='Charm' then 'charms'
	when tag='R' then 'rings'
	when tag='E' then 'earrings'
	when tag='N' then 'necklaces'
	when tag='SB' Then 'bracelets'
	when tag='SCharm' then 'charms'
	when tag='SR' then 'rings'
	when tag='SE' then 'earrings' 
		when tag='SN' then 'necklaces'
	else 'CHECK'
	end as val2

	from #edinburghsum 
	where tag is not null 
	AND REFERENCE LIKE '%KING%'



	select REFERENCE,row_number() over (order by tag) as pid,iif([product/hs_code] ='7113.11.5000','Silver925','Gold585'),'',[sum of assay office quantity] ,
	case 
	when tag='B' Then 'bracelets'
	when tag='Charm' then 'charms'
	when tag='R' then 'rings'
	when tag='E' then 'earrings'
	when tag='N' then 'necklaces'
	when tag='SB' Then 'bracelets'
	when tag='SCharm' then 'charms'
	when tag='SR' then 'rings'
	when tag='SE' then 'earrings' 
		when tag='SN' then 'necklaces'
	else 'CHECK'
	end as val , case 
	when tag='B' Then 'bracelets'
	when tag='Charm' then 'charms'
	when tag='R' then 'rings'
	when tag='E' then 'earrings'
	when tag='N' then 'necklaces'
	when tag='SB' Then 'bracelets'
	when tag='SCharm' then 'charms'
	when tag='SR' then 'rings'
	when tag='SE' then 'earrings' 
		when tag='SN' then 'necklaces'
	else 'CHECK'
	end as val2

	from #edinburghsum 
	where tag is not null 
	AND REFERENCE LIKE '%covent%'


	select reference, row_number() over (order by tag) as pid,iif([product/hs_code] ='7113.11.5000','Silver925','Gold585'),'',[sum of assay office quantity] ,
	case 
	when tag='B' Then 'bracelets'
	when tag='Charm' then 'charms'
	when tag='R' then 'rings'
	when tag='E' then 'earrings'
	when tag='N' then 'necklaces'
	when tag='SB' Then 'bracelets'
	when tag='SCharm' then 'charms'
	when tag='SR' then 'rings'
	when tag='SE' then 'earrings' 
		when tag='SN' then 'necklaces'
	else 'CHECK'
	end as val , case 
	when tag='B' Then 'bracelets'
	when tag='Charm' then 'charms'
	when tag='R' then 'rings'
	when tag='E' then 'earrings'
	when tag='N' then 'necklaces'
	when tag='SB' Then 'bracelets'
	when tag='SCharm' then 'charms'
	when tag='SR' then 'rings'
	when tag='SE' then 'earrings' 
		when tag='SN' then 'necklaces'
	else 'CHECK'
	end as val2

	from #edinburghsum 
	where tag is not null 
	AND REFERENCE LIKE '%mary%'
